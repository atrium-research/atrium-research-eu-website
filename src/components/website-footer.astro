---
import { getFormDataValues, log } from "@acdh-oeaw/lib";
import { Image } from "astro:assets";
import { Icon } from "astro-icon/components";
import * as v from "valibot";

import TextInputField from "@/components/form/text-input-field.astro";
import Link from "@/components/link.astro";
import PageSection from "@/components/page-section.astro";
import { defaultLocale as locale } from "@/config/i18n.config";
import { createNewsletterSubscription, isNewsletterSubscriptionEnabled } from "@/lib/baserow";
import { createReader } from "@/lib/content/create-reader";
import { createI18n } from "@/lib/i18n";
import logo from "~/public/assets/images/atrium-logo-with-text.png";
import eu from "~/public/assets/images/eu-funded.jpg";

const reader = createReader();
const socialMedia = await reader.singletons.socialMedia.readOrThrow({
	resolveLinkedFiles: true,
});

const socialMediaConfig = {
	linkedin: { label: "LinkedIn", icon: "simple-icons:linkedin" },
	twitter: { label: "Twitter", icon: "simple-icons:x" },
	youtube: { label: "YouTube", icon: "simple-icons:youtube" },
};

const { t } = await createI18n(locale);

const email = t("WebsiteFooter.form.email");
const firstName = t("WebsiteFooter.form.first-name");
const lastName = t("WebsiteFooter.form.last-name");
const institution = t("WebsiteFooter.form.institution");
const submit = t("WebsiteFooter.form.submit");

let status = { kind: "initial" } as
	| { kind: "error"; message: string }
	| { kind: "initial" }
	| { kind: "success"; message: string };

if (Astro.request.method === "POST") {
	try {
		const data = await Astro.request.formData();

		const formData = getFormDataValues(data);

		const schema = v.object({
			email: v.pipe(v.string(), v.email()),
			lastName: v.pipe(v.string(), v.nonEmpty()),
			firstName: v.pipe(v.string(), v.nonEmpty()),
			institution: v.optional(v.string()),
		});

		const result = v.safeParse(schema, formData);

		if (!result.success) {
			status = { kind: "error", message: t("WebsiteFooter.form.status.invalid-input") };
		} else {
			await createNewsletterSubscription(result.output);

			status = { kind: "success", message: t("WebsiteFooter.form.status.success") };
		}
	} catch (error) {
		if (error instanceof Error) {
			log.error(error.message);
		}

		status = { kind: "error", message: t("WebsiteFooter.form.status.unknown-error") };
	}
}
---

<footer class="border-t">
	<div class="bg-brand-brown py-12 text-brand-text">
		<div>
			<div class="grid gap-x-0.5 gap-y-8 lg:grid-cols-3 lg:bg-brand-bg">
				<div class="grid place-items-center bg-brand-brown px-8">
					<div>
						<Image alt="" class="h-16 w-auto" src={logo} />
					</div>
				</div>
				<div class="grid place-items-center bg-brand-brown px-8">
					<div class="grid gap-y-4">
						<div class="flex justify-center gap-x-2">
							{
								socialMedia.links.map((link) => {
									const config = socialMediaConfig[link.kind];

									return (
										<a href={link.href}>
											<div class="grid size-10 place-content-center rounded-full bg-brand-bg p-2 text-brand-brown transition hover:opacity-90">
												<Icon aria-hidden="true" class="size-6" name={config.icon} />
											</div>
											<span class="sr-only">{config.label}</span>
										</a>
									);
								})
							}
						</div>
						<a
							class="flex items-center gap-x-2 transition hover:opacity-90"
							href={`mailto:${socialMedia.email}`}
						>
							<Icon aria-hidden="true" class="h-6" name="lucide:mail" />
							{socialMedia.email.replace("@", "[a]")}
						</a>
					</div>
				</div>
				<div class="grid place-items-center bg-brand-brown px-8">
					<div class="grid gap-y-4">
						<h2 class="text-lg font-semibold">Subscribe to our mailing list and newsletter</h2>
						<form class="grid gap-y-2" data-astro-reload method="post">
							<TextInputField label={email} name="email" required type="email" />
							<TextInputField label={firstName} name="firstName" />
							<TextInputField label={lastName} name="lastName" required />
							<TextInputField label={institution} name="institution" />
							<div class="mt-2 flex justify-end">
								<button
									class="rounded-md bg-brand-bg px-4 py-2 font-heading font-semibold text-brand-brown transition hover:opacity-90"
									disabled={isNewsletterSubscriptionEnabled()}
									type="submit"
								>
									{submit}
								</button>
							</div>
							<div
								aria-live="polite"
								aria-atomic="true"
								class={status.kind === "error"
									? "text-negative"
									: status.kind === "success"
										? "text-positive"
										: undefined}
							>
								{status.kind !== "initial" ? status.message : null}
							</div>
						</form>
					</div>
				</div>
			</div>
		</div>
	</div>

	<div>
		<PageSection>
			<div class="flex flex-col gap-x-12 gap-y-8 py-8 md:flex-row">
				<div class="grid gap-y-2">
					<small class="text-sm">
						Funded by the European Union under Grant Agreement n. 101132163. Views and opinions
						expressed are however those of the author(s) only and do not necessarily reflect those
						of the European Union. Neither the European Union nor the granting authority can be held
						responsible for them.
					</small>
					<div class="text-sm">
						<Link class="underline" href="/imprint/">Privacy Policy and Terms of Use</Link>
					</div>
				</div>
				<div class="shrink-0">
					<span class="sr-only">Funded by the European Union</span>
					<Image alt="" class="h-16 w-auto" src={eu} />
				</div>
			</div>
		</PageSection>
	</div>
</footer>
